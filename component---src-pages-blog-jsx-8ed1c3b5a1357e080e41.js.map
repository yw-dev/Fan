{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["Blog","_ref","edges","data","allMarkdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","title","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_4__","path","keyword","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","stype","type","date","tags","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array","categores","query"],"mappings":"6NAQMA,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACSC,kBAAfF,MACR,OACEG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAK,QAAUC,IAAOC,YAC9BP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAQH,MAAK,GAAKC,IAAOC,YACzBP,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAYC,KAAK,OAAOJ,MAAM,KAAKK,QAAQ,SAC1Cb,EAAMc,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTb,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CACEM,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,MAAOP,EAAKI,YAAYI,KACxBZ,KAAMI,EAAKI,YAAYR,KACvBJ,MAAOQ,EAAKI,YAAYZ,MACxBiB,KAAMT,EAAKI,YAAYK,KACvBC,KAAMV,EAAKI,YAAYM,KACvBC,QAASX,EAAKW,eAQX7B,YAEfA,EAAK8B,UAAY,CACf3B,KAAM4B,IAAUC,MAAM,CACpB5B,kBAAmB2B,IAAUC,MAAM,CACjC9B,MAAO6B,IAAUE,QACfF,IAAUC,MAAM,CACdd,KAAMa,IAAUC,MAAM,CACpBH,QAASE,IAAUG,OACnBZ,YAAaS,IAAUC,MAAM,CAC3BX,MAAOU,IAAUI,OAAOC,WACxBtB,KAAMiB,IAAUG,OAAOE,WACvB1B,MAAOqB,IAAUG,OAAOE,WACxBT,KAAMI,IAAUG,OAAOE,WACvBR,KAAMG,IAAUM,MAChBC,UAAWP,IAAUG,OAAOE,WAC5BV,KAAMK,IAAUG,OAAOE,iBAG1BA,iBAMJ,IAAMG,EAAK","file":"component---src-pages-blog-jsx-8ed1c3b5a1357e080e41.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Header, BlogList, ContentNav } from 'components';\nimport { Layout, Container } from 'layouts';\nimport config from '../../config/site';\n\nconst Blog = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={`文章 | ${config.siteTitle}`} />\n      <Header title={`${config.siteTitle}`}></Header>\n      <Container>\n        <ContentNav path=\"blog\" title=\"文章\" keyword=\"全部文章\"></ContentNav>\n        {edges.map(({ node }) => (\n          <BlogList\n            key={node.id}\n            cover={node.frontmatter.cover.childImageSharp.fluid}\n            stype={node.frontmatter.type}\n            path={node.frontmatter.path}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n            excerpt={node.excerpt}\n          />\n        ))}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              categores: PropTypes.string.isRequired,\n              type: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            tags\n            type\n            categores\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}