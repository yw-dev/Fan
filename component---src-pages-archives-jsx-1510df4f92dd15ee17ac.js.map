{"version":3,"sources":["webpack:///./src/pages/archives.jsx"],"names":["Archives","_ref","pageContext","list","data","spath","archive","archives","forEach","_ref2","node","frontmatter","date","dates","split","push","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","layouts__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","a","title","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_7__","path","keyword","key","id","stype","type","tags","excerpt","propTypes","PropTypes","shape","string","isRequired","array"],"mappings":"2MAQMA,EAAW,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YACHC,GAD2BF,EAAXG,KACEF,EAAzBG,MAAyBH,EAAlBC,MAAMG,EAAYJ,EAAZI,QAEfC,EAAW,GAWjB,OAVAJ,EAAKK,QAAQ,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACd,GAAIA,EAAKC,YAAYC,KAAM,CACzB,IAAIC,EAAQH,EAAKC,YAAYC,KAAKE,MAAM,KACnCP,EAASM,EAAM,GAAG,IAAIA,EAAM,MAC/BN,EAASM,EAAM,GAAG,IAAIA,EAAM,IAAM,IAEpCN,EAASM,EAAM,GAAG,IAAIA,EAAM,IAAIE,KAAKL,MAKvCM,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAK,QAAUC,IAAOC,YAC9BP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAQH,MAAK,GAAKC,IAAOC,YACzBP,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CAAYC,KAAK,OAAOJ,MAAM,KAAKK,QAASpB,IAC3CH,EAAKK,QAAQ,SAAAE,GAAI,OAChBM,OAAAC,EAAA,EAAAD,CAACQ,EAAA,EAAD,CACEG,IAAKjB,EAAKkB,GACVC,MAAOnB,EAAKC,YAAYmB,KACxBL,KAAMf,EAAKC,YAAYc,KACvBJ,MAAOX,EAAKC,YAAYU,MACxBT,KAAMF,EAAKC,YAAYC,KACvBmB,KAAMrB,EAAKC,YAAYoB,KACvBC,QAAStB,EAAKsB,eAQXhC,YAEfA,EAASiC,UAAY,CACnB/B,YAAagC,IAAUC,MAAM,CAC3B9B,MAAO6B,IAAUE,OAAOC,WACxBlC,KAAM+B,IAAUI,MAChBhC,QAAS4B,IAAUE,OAAOC","file":"component---src-pages-archives-jsx-1510df4f92dd15ee17ac.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { Header, BlogList, ContentNav } from 'components';\nimport { Layout, Container } from 'layouts';\nimport config from '../../config/site';\n\nconst Archives = ({ pageContext, data }) => {\n  const { spath, list, archive } = pageContext;\n  //const posts = data.allMarkdownRemark.edges;\n  const archives = [];\n  list.forEach(({ node }) => {\n    if (node.frontmatter.date) {\n      var dates = node.frontmatter.date.split('-');\n      if (!archives[dates[0]+'-'+dates[1]]) {\n        archives[dates[0]+'-'+dates[1]] = [];\n      }\n      archives[dates[0]+'-'+dates[1]].push(node);\n    }\n  });\n  //const list = archives[archive];\n  return (\n    <Layout>\n      <Helmet title={`归档 | ${config.siteTitle}`} />\n      <Header title={`${config.siteTitle}`}></Header>\n      <Container>\n        <ContentNav path=\"blog\" title=\"归档\" keyword={archive}></ContentNav>\n        {list.forEach(node => (\n          <BlogList\n            key={node.id}\n            stype={node.frontmatter.type}\n            path={node.frontmatter.path}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            tags={node.frontmatter.tags}\n            excerpt={node.excerpt}\n          />\n        ))}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Archives;\n\nArchives.propTypes = {\n  pageContext: PropTypes.shape({\n    spath: PropTypes.string.isRequired,\n    list: PropTypes.array,\n    archive: PropTypes.string.isRequired,\n  }),\n};\n"],"sourceRoot":""}