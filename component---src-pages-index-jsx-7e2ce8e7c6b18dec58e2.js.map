{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["library","add","fas","fab","far","ContentWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__","target","props","theme","breakpoints","l","hd","m","s","ContentContainer","ContentPost","ContentHeader","vl","TopWrapper","AsideWrapper","PostWrapper","name","styles","Index","_ref","posts","data","allMarkdownRemark","edges","postsByTag","postsBySpecial","postsByCategory","postsByType","forEach","_ref2","node","frontmatter","type","push","special","categores","tags","tag","allTags","keys","sort","n","localeCompare","allTypes","stype","map","tagName","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","layouts__WEBPACK_IMPORTED_MODULE_9__","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","a","title","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_16__","propTypes","PropTypes","shape","arrayOf","excerpt","string","cover","object","isRequired","path","typeID","typeTitle","date","array","query"],"mappings":"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","file":"component---src-pages-index-jsx-7e2ce8e7c6b18dec58e2.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from '@emotion/styled';\nimport { Layout, NavBar } from 'layouts';\nimport { locale } from 'core-js';\nimport config from '../../config/site';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons';\nlibrary.add(fas, fab, far)\n\nimport { \n  Header, \n  PostList, \n  SearchBar,\n  HotTopic, \n  SlideBar, \n  Specials, \n  Archive, \n  Projects, \n  GuessLike, \n  TagCloud,\n  CardHeader, \n} from 'components';\n\nconst ContentWrapper = styled.div`\n  margin: 2rem 8rem 2rem 8rem;\n  width: auto;\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\n    margin: 1rem 6rem 1rem 6rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.hd}) {\n    margin: 1rem 4rem 1rem 4rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    margin: 1rem 2rem 1rem 2rem;\n  }\n  @media (max-width:  ${props => props.theme.breakpoints.s}) {\n    margin:  1rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    flex-wrap: wrap;\n  }\n`; \n\nconst ContentPost = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 1rem;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    padding-right: 0rem;\n  }\n`;\n\nconst ContentHeader = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    flex-wrap: wrap;\n  }\n`; \n\nconst TopWrapper = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: row;\n  margin: 0 0 1rem 0;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst AsideWrapper = styled.div`\n  width: calc(99.9% * 1 / 3 - 1rem);\n  display: flex;\n  flex-direction: column;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    width: calc(99.9% * 1 / 2 - 1rem);\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    width: 100%;\n  }\n`;\n\nconst PostWrapper = styled.div`\n  width: 100%;\n  float: left;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  const postsByTag = {};\n  const postsBySpecial = {};\n  const postsByCategory = {};\n  const postsByType = {};\n  // create tags page\n  posts.forEach(({ node }) => {\n    if (node.frontmatter.type) {\n      if (!postsByType[node.frontmatter.type]) {\n        postsByType[node.frontmatter.type] = [];\n      }\n      postsByType[node.frontmatter.type].push(node);\n    }\n    if (node.frontmatter.special) {\n        if (!postsBySpecial[node.frontmatter.special]) {\n          postsBySpecial[node.frontmatter.special] = [];\n        }\n        postsBySpecial[node.frontmatter.special].push(node);\n    }\n    if (node.frontmatter.categores) {\n      if (!postsByCategory[node.frontmatter.categores]) {\n        postsByCategory[node.frontmatter.categores] = [];\n      }\n      postsByCategory[node.frontmatter.categores].push(node);\n    }\n    if (node.frontmatter.tags) {\n      node.frontmatter.tags.forEach(tag => {\n        if (!postsByTag[tag]) {\n          postsByTag[tag] = [];\n        }\n        postsByTag[tag].push(node);\n      });\n    }\n  });\n\n  const allTags = Object.keys(postsByTag).sort((m, n) => {  \n    return m.localeCompare(n);\n  });\n  const allCategores = Object.keys(postsByCategory).sort((m, n) => {  \n    return m.localeCompare(n);\n  });\n  const allTypes = Object.keys(postsByType).sort((m, n) => {  \n    return m.localeCompare(n);\n  });\n  const allSpecials = Object.keys(postsBySpecial).sort((m, n) => {  \n    return m.localeCompare(n);\n  });\n\n  allTypes.forEach(stype => {\n    postsByType[stype].map(node => {\n      \n      allTags.forEach(tagName => {\n        const list = postsByTag[tagName];\n\n      })\n    })\n  })\n  return (  \n    <Layout>\n      <Helmet title={`首页 | ${config.siteTitle}`} />\n      <Header title={`${config.siteTitle}`}></Header>\n      <ContentWrapper>\n        <ContentContainer>\n          <ContentPost>\n            <ContentHeader>\n              <TopWrapper>\n                <HotTopic/>\n                <Projects/>\n              </TopWrapper>\n            </ContentHeader>       \n            <PostWrapper>\n              <Specials />  \n            </PostWrapper>\n            <PostList />\n          </ContentPost>\n          <AsideWrapper>\n            <SlideBar />\n            <Archive />\n            <GuessLike />\n            <TagCloud />\n          </AsideWrapper>\n        </ContentContainer>        \n      </ContentWrapper>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              type: PropTypes.string.isRequired,\n              typeID: PropTypes.string.isRequired,\n              typeTitle: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              categores: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          frontmatter {\n            title\n            type\n            typeID\n            typeTitle\n            path\n            tags\n            categores\n            date(formatString: \"YYYY-MM-DD\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}