{"pageContext":{"pathSlug":"/post-two","spath":"blog","prev":{"id":"2f440b22-75a5-506b-90fe-04700b277f18","excerpt":"Ghost comes with powerful features built directly into the core software which can be customised and configured based on the needs of each individual site. Here's a quick overview of the main features…","html":"<p>Ghost comes with powerful features built directly into the core software which can be customised and configured based on the needs of each individual site.</p>\n<p>Here's a quick overview of the main features you'll probably be interested in as you're getting started. This isn't an exhaustive list, just some highlights.</p>\n<h2>Developer-friendly API</h2>\n<p>At its core Ghost is a self-consuming, RESTful JSON API with decoupled admin client and front-end. We provide lots of tooling to get a site running as quickly as possible, but at the end of the day it's <strong>Just JSON</strong> ™️, so if you want to use Ghost completely headless and write your own frontend or backend... you can!</p>\n<p>Equally, Ghost is heavily designed for performance. There are 2-5 frontpage stories on HackerNews at any given time that are served by Ghost. It handles scale with ease and doesn't fall over as a result of traffic spikes.</p>\n<h2>A serious editor</h2>\n<p>Ghost has the rich editor which every writer wants, but under the hood it delivers far more power than you would expect. All content is stored in a standardised JSON-based document storage format called MobileDoc, which includes support for extensible rich media objects called Cards.</p>\n<p>In simple terms you can think of it like having Slack integrations inside Medium's editor, stored sanely and fully accessible via API.</p>\n<h2>Custom site structures</h2>\n<p>Routing in Ghost is completely configurable based on your needs. Out of the box Ghost comes with a standard reverse chronological feed of posts with clean permalinks and basic pages, but that's easy to change.</p>\n<p>Whether you need a full <strong>multi-language site</strong> with <code class=\"language-text\">/en/</code> and <code class=\"language-text\">/de/</code> base URLs, or you want to build out specific directory structures for hierarchical data like <code class=\"language-text\">/europe/uk/london/</code> — Ghost's routing layer can be manipulated in any number of ways to achieve your use case.</p>\n<h2>Roles &#x26; permissions</h2>\n<p>Set up your site with sensible user roles and permissions built-in from the start.</p>\n<ul>\n<li><strong>Contributors:</strong> Can log in and write posts, but cannot publish.</li>\n<li><strong>Authors:</strong> Can create and publish new posts and tags.</li>\n<li><strong>Editors:</strong> Can invite, manage and edit authors and contributors.</li>\n<li><strong>Administrators:</strong> Have full permissions to edit all data and settings.</li>\n<li><strong>Owner:</strong> An admin who cannot be deleted + has access to billing details.</li>\n</ul>\n<h2>Custom themes</h2>\n<p>Ghost ships with a simple Handlebars.js front-end theme layer which is very straightforward to work with and surprisingly powerful. Many people stick with the default theme (<a href=\"https://demo.ghost.io\">live demo</a> / <a href=\"https://github.com/tryghost/casper\">source code</a>), which provides a clean magazine design - but this can be modified or entirely replaced.</p>\n<p>The Ghost <a href=\"https://marketplace.ghost.org\">Theme Marketplace</a> provides a selection of pre-made third-party themes which can be installed with ease. Of course you can also build your own <a href=\"/api/handlebars-themes/\">Handlebars Theme</a> or use a <a href=\"/api/\">different front-end</a> altogether.</p>\n<h2>Apps &#x26; integrations</h2>\n<p>Because Ghost is completely open source, built as a JSON API, has webhooks, and gives you full control over the front-end: It essentially integrates with absolutely everything. Some things are easier than others, but almost anything is possible with a little elbow grease. Or a metaphor more recent than 1803.</p>\n<p>You can browse our large <a href=\"/integrations/\">directory of integrations</a> with instructions, or build any manner of custom integration yourself by writing a little JavaScript and Markup to do whatever you want.</p>\n<p>You don't need janky broken plugins which slow your site down. Integrations are the modern way to achieve extended functionality with ease.</p>\n<h2>Search engine optimisation</h2>\n<p>Ghost comes with world-class SEO and everything you need to ensure that your content shows up in search indexes quickly and consistently.</p>\n<h4>No plugins needed</h4>\n<p>Ghost has all the fundamental technical SEO optimisations built directly into core, without any need to rely on third party plugins. It also has a far superior speed and pageload performance thanks to Node.js.</p>\n<h4>Automatic google XML sitemaps</h4>\n<p>Ghost will automatically generate and link to a complete Google sitemap including every page on your site, to make sure search engines are able to index every URL.</p>\n<h4>Automatic structured data + JSON-LD</h4>\n<p>Ghost generates <a href=\"https://developers.google.com/search/docs/guides/intro-structured-data\">JSON-LD</a> based structured metadata about your pages so that you don't have to rely on messy microformats in your markup to provide semantic context. Even if you change theme or front-end, your SEO remains perfectly intact. Ghost also adds automatic code for Facebook OpenGraph and Twitter Cards.</p>\n<h4>Canonical tags</h4>\n<p>Ghost automatically generates the correct <code class=\"language-text\">rel=&quot;canonical&quot;</code> tag for each post and page so that search engines always prioritise one true link.</p>\n<hr>\n<p>If you're curious to see more, check out the <a href=\"https://ghost.org/features/\">features page</a> on Ghost.org.</p>","frontmatter":{"date":"2018-10-15","path":"/post-one","title":"Post Number One","tags":["C++","设计模式"],"type":"resource","typeID":"3","typeTitle":"资源","categores":"游戏","special":""}},"next":{"id":"3f488da6-4175-5c0c-bcab-c8ac103f80f2","excerpt":"Staff users within Ghost have access to the admin area with varying levels of permissions for what they can do. Roles & permissions There are five different staff user roles within Ghost Contributors…","html":"<p>Staff users within Ghost have access to the admin area with varying levels of permissions for what they can do.</p>\n<h2>Roles &#x26; permissions</h2>\n<p>There are five different staff user roles within Ghost</p>\n<ul>\n<li><strong>Contributors:</strong> Can log in and write posts, but cannot publish</li>\n<li><strong>Authors:</strong> Can create and publish new posts and tags</li>\n<li><strong>Editors:</strong> Can invite, manage and edit authors and contributors</li>\n<li><strong>Administrators:</strong> Have full permissions to edit all data and settings</li>\n<li><strong>Owner:</strong> An admin who cannot be deleted and has access to billing details</li>\n</ul>\n<h2>Author archives</h2>\n<p>Like <a href=\"/concepts/tags/\">tags</a>, staff users are another resource by which content can be organised and sorted. Multiple authors can be assigned to any given post to generate bylines. Equally, author archives can be generated on the front end based on which posts an author is assigned to.</p>\n<p>Also like tags, within Ghost Handlebars Themes author archives are automatically added to the Google XML Sitemap, and have their own pagination + RSS feeds.</p>\n<p>Here's an example of an <a href=\"https://demo.ghost.io/author/martin/\">author archive</a> in the default Ghost Theme:</p>\n<p><a href=\"https://demo.ghost.io/author/martin/\"><img src=\"../images/concepts/author-archive.jpg\" alt=\"Author Archive\"></a></p>\n<p>Public author archives are only generated for staff users who are assigned to published posts, any other staff users are not publicly visible.</p>\n<h2>Security &#x26; trust</h2>\n<p>If running the front-end of your site and the Ghost admin client on the same domain, there are certain permissions escalation vectors which are unavoidable.</p>\n<p>Ghost considers staff users to be \"trusted\" by default - so if you're running in an environment where users are untrusted, you should ensure that Ghost-Admin and your site's front-end run on separate domains.</p>\n<h2>Sample API data</h2>\n<p>Here's a sample author object from the Ghost <a href=\"/api/content/\">Content API</a></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1239bbfe90a518a862677abc\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Cameron Almeida\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"slug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cameron-almeida\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://path.to/author/cameron-almeida/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"bio\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Editor at large.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Cape Town\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"profile_image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://path.to/img.png\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"website\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://example.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"twitter\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://twitter.com/example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"facebook\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://facebook.com/example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"cover_image\"</span><span class=\"token operator\">:</span> <span class=\"token null\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"meta_title\"</span><span class=\"token operator\">:</span> <span class=\"token null\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"meta_description\"</span><span class=\"token operator\">:</span> <span class=\"token null\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"2018-10-17","path":"/post-three","title":"Post Number Three","tags":["Html5","WebGL"],"type":"self","typeID":"1","typeTitle":"个人随笔","categores":"个人日记","special":""}}}}