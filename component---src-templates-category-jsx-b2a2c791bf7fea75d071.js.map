{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["Wrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","props","theme","shadow","feature","title","bottom","StyledLink","small","default","transitions","boom","transition","borderRadius","hover","colors","primary","dark","Link","white","light","grey","Information","duration","border","posts","HeadTitle","Category","_ref","pageContext","list","spath","tagName","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","layouts__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","a","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_8__","to","path","keyword","map","post","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","className","frontmatter","name","tags","stype","type","excerpt","propTypes","PropTypes","shape","array","string","tagname"],"mappings":"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","file":"component---src-templates-category-jsx-b2a2c791bf7fea75d071.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Layout, Container } from 'layouts';\nimport { Header, TagsBlock, ContentNav, ContentHeader } from 'components';\nimport config from '../../config/site';\n\nconst Wrapper = styled.article`\n  width:100%;\n  margin: 0;\n  padding: 1rem 3rem;\n  box-shadow: ${props => props.theme.shadow.feature.title.bottom};\n`;\n\nconst Image = styled.div`\n  margin: auto;\n  position: relative;\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\n  transition: ${props => props.theme.transitions.boom.transition};\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 400px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\n    transform: scale(1.04);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: ${props => props.theme.borderRadius.default};\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.primary.dark};\n    }\n  }\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 100%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n  div{\n    style:none;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n    color: ${props => props.theme.colors.white.light};\n    padding: 5px 10px;\n    border: solid 1px #fff;\n    border-radius: 20px;\n    &:hover {\n      color: ${props => props.theme.colors.white.grey};\n      background: ${props => props.theme.colors.white.light};\n    }\n`;\n\nconst Information = styled.div`\n    h1 {\n      font-size: 2rem;\n      display: inline-block;\n      transition: all ${props => props.theme.transitions.default.duration};\n      &:hover {\n        color: ${props => props.theme.colors.white.light};\n      }\n    }\n    text-align: center;\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    border-bottom: ${props => props.theme.border.posts};\n    @media (max-width: 800px) {\n      flex-basis: 100%;\n      max-width: 100%;\n      width: 100%;\n    }\n`;\n\nconst HeadTitle = styled.div`\n    padding: 1rem 0rem;\n    display: flex;\n    flex-direction: column;\n    color: ${props => props.theme.colors.white.light};\n`;\n\nconst Category = ({ pageContext }) => {\n  const { list, spath, tagName } = pageContext;\n  //const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1);\n  return (\n    <Layout>\n      <Helmet title={`${tagName} | ${config.siteTitle}`} />\n      <Header title={tagName}>\n        <StyledLink to=\"/category\">分类</StyledLink>\n      </Header>\n      <Container>\n        <ContentNav path={spath} title=\"分类\" keyword={tagName}></ContentNav>\n        {list.map(post => (\n          <Wrapper key={post.id}>\n            <Information>\n              <HeadTitle>\n                <Link className=\"title\" to={post.frontmatter.path}>\n                  <h3>{post.frontmatter.title}</h3>\n                </Link>\n              </HeadTitle>\n              <ContentHeader name={tagName} tags={post.frontmatter.tags} path={post.frontmatter.path} stype={post.frontmatter.type}></ContentHeader>\n              {post.excerpt}\n              <TagsBlock spath={post.frontmatter.type} list={post.frontmatter.tags} />\n            </Information>\n          </Wrapper>\n        ))}\n      </Container>\n    </Layout>\n  )};\n\nexport default Category;\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    list: PropTypes.array,\n    spath: PropTypes.string,\n    tagname: PropTypes.string,\n  }),\n};\n"],"sourceRoot":""}