{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["ContentWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","props","theme","breakpoints","l","hd","m","s","ContentContainer","ContentPost","AsideWrapper","vl","StyledLink","shadow","feature","title","bottom","small","default","transitions","boom","transition","borderRadius","hover","colors","primary","dark","Link","white","light","grey","Category","duration","border","posts","_ref","pageContext","data","spath","tagName","postsByCategory","allMarkdownRemark","edges","map","_ref2","node","frontmatter","categores","push","list","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","layouts__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","a","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_9__","to","className","path","keyword","key","id","cover","childImageSharp","fluid","stype","type","date","tags","excerpt","propTypes","PropTypes","shape","string","tagname","arrayOf","object","isRequired","array","query"],"mappings":"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","file":"component---src-templates-category-jsx-364c65ac5d1e8d4d6d5e.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Layout, Container } from 'layouts';\nimport config from '../../config/site';\nimport { \n  Header, \n  Archive, \n  GuessLike, \n  TagCloud,\n  BlogList, \n  ContentNav,\n} from 'components';\n\nconst ContentWrapper = styled.div`\n  margin: 1rem 9rem 1rem 9rem;\n  width: auto;\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\n    margin: 2rem 6rem 2rem 6rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.hd}) {\n    margin: 1rem 4rem 1rem 4rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    margin: 1rem 2rem 1rem 2rem;\n  }\n  @media (max-width:  ${props => props.theme.breakpoints.s}) {\n    margin:  1rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    flex-wrap: wrap;\n  }\n`; \n\nconst ContentPost = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 1rem;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    padding-right: 0rem;\n  }\n  .list{\n    margin:0;\n    padding:0;\n    @media (max-width: ${props => props.theme.breakpoints.m}) {\n      margin: 0 0 1rem 0;\n    }\n  }\n`;\n\nconst AsideWrapper = styled.div`\n  width: calc(99.9% * 1 / 3 - 1rem);\n  display: flex;\n  flex-direction: column;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    width: calc(99.9% * 1 / 2 - 1rem);\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    width: 100%;\n  }\n`;\n\n\nconst Wrapper = styled.article`\n  width:100%;\n  margin: 0;\n  padding: 1rem 3rem;\n  font-size: 14px;\n  box-shadow: ${props => props.theme.shadow.feature.title.bottom};\n`;\n\nconst Image = styled.div`\n  margin: auto;\n  position: relative;\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\n  transition: ${props => props.theme.transitions.boom.transition};\n  border-radius: ${props => props.theme.borderRadius.default};\n  min-height: 400px;\n  img {\n    border-radius: ${props => props.theme.borderRadius.default};\n  }\n  &:hover {\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\n    transform: scale(1.04);\n  }\n  a {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: ${props => props.theme.borderRadius.default};\n    > div {\n      position: static !important;\n    }\n    > div > div {\n      position: static !important;\n    }\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.primary.dark};\n    }\n  }\n  flex-basis: 100%;\n  max-width: 100%;\n  width: 100%;\n  @media (max-width: 800px) {\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    margin-bottom: 1.5rem;\n  }\n  @media (max-width: 500px) {\n    min-height: 200px;\n  }\n  div{\n    style:none;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n    color: ${props => props.theme.colors.white.light};\n    padding: 5px 10px;\n    border: solid 1px #fff;\n    border-radius: 20px;\n    &:hover {\n      color: ${props => props.theme.colors.white.grey};\n      background: ${props => props.theme.colors.white.light};\n    }\n`;\n\nconst Information = styled.div`\n    h1 {\n      display: inline-block;\n      transition: all ${props => props.theme.transitions.default.duration};\n      &:hover {\n        color: ${props => props.theme.colors.white.light};\n      }\n    }\n    text-align: center;\n    flex-basis: 100%;\n    max-width: 100%;\n    width: 100%;\n    border-bottom: ${props => props.theme.border.posts};\n    @media (max-width: 800px) {\n      flex-basis: 100%;\n      max-width: 100%;\n      width: 100%;\n    }\n`;\n\nconst HeadTitle = styled.div`\n    padding: 1rem 0rem;\n    display: flex;\n    flex-direction: column;\n    color: ${props => props.theme.colors.white.light};\n`;\n\nconst Category = ({ pageContext, data }) => {\n  const { spath, tagName } = pageContext;\n  const postsByCategory = {};\n  data.allMarkdownRemark.edges.map(({ node }) => {    \n    if (node.frontmatter.categores) {\n      if (!postsByCategory[node.frontmatter.categores]) {\n        postsByCategory[node.frontmatter.categores] = [];\n      }\n      postsByCategory[node.frontmatter.categores].push(node);\n    }\n  });\n  const list = postsByCategory[tagName];\n  //const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1);\n  return (\n    <Layout>\n      <Helmet title={`${tagName} | ${config.siteTitle}`} />\n      <Header title={tagName}>\n        <StyledLink to=\"/category\">分类</StyledLink>\n      </Header>\n      <ContentWrapper>\n        <ContentContainer>\n          <ContentPost>\n            <Container className=\"list\">\n              <ContentNav path={spath} title=\"分类\" keyword={tagName}></ContentNav>\n              {list && list.map(node => (\n                <BlogList\n                  key={node.id}\n                  cover={node.frontmatter.cover.childImageSharp.fluid}\n                  stype={node.frontmatter.type}\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  tags={node.frontmatter.tags}\n                  excerpt={node.excerpt}\n                />\n              ))}\n            </Container>\n          </ContentPost>\n          <AsideWrapper>\n            <TagCloud />\n            <Archive />\n            <GuessLike />\n          </AsideWrapper>\n        </ContentContainer>      \n      </ContentWrapper>\n    </Layout>\n  )};\n\nexport default Category;\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    spath: PropTypes.string,\n    tagname: PropTypes.string,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              categores: PropTypes.string.isRequired,\n              type: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            tags\n            type\n            categores\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}