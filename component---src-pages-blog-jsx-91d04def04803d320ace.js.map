{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["ContentWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","props","theme","breakpoints","l","hd","m","s","ContentContainer","ContentPost","AsideWrapper","vl","Blog","_ref","edges","data","allMarkdownRemark","keyword","concat","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","title","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_7__","className","path","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","stype","type","date","tags","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array","categores","typeID","typeTitle","query"],"mappings":"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","file":"component---src-pages-blog-jsx-91d04def04803d320ace.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nimport styled from '@emotion/styled';\nimport { Layout, Container } from 'layouts';\nimport config from '../../config/site';\nimport { \n  Header, \n  Archive, \n  GuessLike, \n  BlogList, \n  ContentNav,\n} from 'components';\n\nconst ContentWrapper = styled.div`\nmargin: 2rem 8rem 2rem 8rem;\n  width: auto;\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\n    margin: 1rem 6rem 1rem 6rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.hd}) {\n    margin: 1rem 4rem 1rem 4rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    margin: 1rem 2rem 1rem 2rem;\n  }\n  @media (max-width:  ${props => props.theme.breakpoints.s}) {\n    margin:  1rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    flex-wrap: wrap;\n  }\n`; \n\nconst ContentPost = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 1rem;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    padding-right: 0rem;\n  }\n  .list{\n    margin:0;\n    padding:0;\n    @media (max-width: ${props => props.theme.breakpoints.m}) {\n      margin: 0 0 1rem 0;\n    }\n  }\n`;\n\nconst AsideWrapper = styled.div`\n  width: calc(99.9% * 1 / 3 - 1rem);\n  display: flex;\n  flex-direction: column;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    width: calc(99.9% * 1 / 2 - 1rem);\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    width: 100%;\n  }\n`;\n\n\nconst Blog = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  var keyword = [...\"全部文章\"];\n  return (\n    <Layout>\n      <Helmet title={`文章 | ${config.siteTitle}`} />\n      <Header title={`${config.siteTitle}`}></Header>\n      <ContentWrapper>\n        <ContentContainer>\n          <ContentPost>\n            <Container className=\"list\">\n              <ContentNav path=\"blog\" title=\"文章\" keyword={keyword}></ContentNav>\n              {edges.map(({ node }) => (\n                <BlogList\n                  key={node.id}\n                  cover={node.frontmatter.cover.childImageSharp.fluid}\n                  stype={node.frontmatter.type}\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  tags={node.frontmatter.tags}\n                  excerpt={node.excerpt}\n                />\n              ))}\n            </Container>\n          </ContentPost>\n          <AsideWrapper>\n            <Archive />\n            <GuessLike />\n          </AsideWrapper>\n        </ContentContainer>      \n      </ContentWrapper>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              categores: PropTypes.string.isRequired,\n              type: PropTypes.string.isRequired,\n              typeID: PropTypes.string.isRequired,\n              typeTitle: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          frontmatter {\n            title\n            path\n            tags\n            type\n            typeID\n            typeTitle\n            categores\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}