{"version":3,"sources":["webpack:///./src/pages/archives.jsx"],"names":["ContentWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","props","theme","breakpoints","l","hd","m","s","ContentContainer","ContentPost","AsideWrapper","vl","Archives","_ref","pageContext","data","archive","spath","archives","allMarkdownRemark","edges","map","_ref2","node","frontmatter","date","dates","split","push","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","layouts__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","a","title","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_7__","className","path","keyword","propTypes","PropTypes","shape","string","isRequired","arrayOf","excerpt","cover","object","type","tags","array","categores","query"],"mappings":"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","file":"component---src-pages-archives-jsx-7421518d98df3f4084fd.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Header, BlogList, ContentNav } from 'components';\nimport { Layout, Container } from 'layouts';\nimport config from '../../config/site';\nimport { \n  SlideBar, \n  Archive, \n  GuessLike, \n  CardHeader, \n} from 'components';\n\nconst ContentWrapper = styled.div`\n  margin: 1rem 9rem 1rem 9rem;\n  width: auto;\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\n    margin: 2rem 6rem 2rem 6rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.hd}) {\n    margin: 1rem 4rem 1rem 4rem;\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    margin: 1rem 2rem 1rem 2rem;\n  }\n  @media (max-width:  ${props => props.theme.breakpoints.s}) {\n    margin:  1rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  width: auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    flex-wrap: wrap;\n  }\n`; \n\nconst ContentPost = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 1rem;\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    padding-right: 0rem;\n  }\n  .list{\n    margin:0;\n    padding:0;\n    @media (max-width: ${props => props.theme.breakpoints.m}) {\n      margin: 0 0 1rem 0;\n    }\n  }\n`;\n\nconst AsideWrapper = styled.div`\n  width: calc(99.9% * 1 / 3 - 1rem);\n  display: flex;\n  flex-direction: column;\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\n    width: calc(99.9% * 1 / 2 - 1rem);\n  }\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\n    width: 100%;\n  }\n`;\n\nconst Archives = ({ pageContext, data }) => {\n  const { spath, archive } = pageContext;  \n  const archives = {};\n  data.allMarkdownRemark.edges.map(({ node }) => {\n    if (node.frontmatter.date) {\n      var dates = node.frontmatter.date.split('-');\n      if (!archives[dates[0]+'-'+dates[1]]) {\n        archives[dates[0]+'-'+dates[1]] = [];\n      }\n      archives[dates[0]+'-'+dates[1]].push(node);\n    }\n  });\n  const posts = archives[archive];\n  return (\n    <Layout>\n      <Helmet title={`归档 | ${config.siteTitle}`} />\n      <Header title={`${config.siteTitle}`}></Header>\n      <ContentWrapper>\n        <ContentContainer>\n          <ContentPost>\n            <Container className=\"list\">\n              <ContentNav path=\"blog\" title=\"归档\" keyword={archive}></ContentNav>\n            </Container>\n          </ContentPost>\n          <AsideWrapper>\n            <Archive />\n            <GuessLike />\n          </AsideWrapper>\n        </ContentContainer>      \n      </ContentWrapper>\n    </Layout>\n  );\n};\n\nexport default Archives;\n\nArchives.propTypes = {\n  pageContext: PropTypes.shape({\n    spath: PropTypes.string.isRequired,\n    archive: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              type: PropTypes.string,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n              categores: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          frontmatter {\n            title\n            type\n            path\n            tags\n            categores\n            date(formatString: \"YYYY-MM-DD\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}