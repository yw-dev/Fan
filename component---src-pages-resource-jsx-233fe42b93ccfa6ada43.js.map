{"version":3,"sources":["webpack:///./src/pages/resource.jsx"],"names":["ContentWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_5__","target","props","theme","breakpoints","l","hd","m","s","ContentContainer","ContentPost","AsideWrapper","vl","StyledLink","shadow","feature","title","bottom","small","default","transitions","boom","transition","borderRadius","hover","colors","primary","dark","Link","white","light","grey","Resource","duration","border","posts","_ref","pageContext","data","spath","tagName","postsByType","postsByCategory","postsByTag","categories","keyword","allMarkdownRemark","edges","map","_ref2","node","frontmatter","type","typeTitle","push","keys","categores","tags","forEach","tag","uri","split","length","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","layouts__WEBPACK_IMPORTED_MODULE_11__","react_helmet__WEBPACK_IMPORTED_MODULE_10___default","a","config","siteTitle","components__WEBPACK_IMPORTED_MODULE_13__","to","path","key","id","cover","childImageSharp","fluid","stype","date","category","excerpt","other","list","propTypes","PropTypes","shape","string","tagname","arrayOf","object","isRequired","array","typeID","query"],"mappings":"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","file":"component---src-pages-resource-jsx-233fe42b93ccfa6ada43.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { Layout, Container } from 'layouts';\r\nimport config from '../../config/site';\r\nimport { \r\n  Header, \r\n  Archive, \r\n  GuessLike, \r\n  Card,\r\n  ProjectsList, \r\n  BlogList, \r\n  ContentNav,\r\n} from 'components';\r\n\r\nconst ContentWrapper = styled.div`\r\n  margin: 2rem 8rem 2rem 8rem;\r\n  width: auto;\r\n  @media (max-width: ${props => props.theme.breakpoints.l}) {\r\n    margin: 1rem 6rem 1rem 6rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.hd}) {\r\n    margin: 1rem 4rem 1rem 4rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    margin: 1rem 2rem 1rem 2rem;\r\n  }\r\n  @media (max-width:  ${props => props.theme.breakpoints.s}) {\r\n    margin:  1rem;\r\n  }\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    flex-wrap: wrap;\r\n  }\r\n`; \r\n\r\nconst ContentPost = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-right: 1rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    padding-right: 0rem;\r\n  }\r\n  .list{\r\n    margin:0;\r\n    padding:0;\r\n    @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n      margin: 0 0 1rem 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AsideWrapper = styled.div`\r\n  width: calc(99.9% * 1 / 3 - 1rem);\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: ${props => props.theme.breakpoints.vl}) {\r\n    width: calc(99.9% * 1 / 2 - 1rem);\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.m}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n\r\nconst Wrapper = styled.article`\r\n  width:100%;\r\n  margin: 0;\r\n  padding: 1rem 3rem;\r\n  font-size: 14px;\r\n  box-shadow: ${props => props.theme.shadow.feature.title.bottom};\r\n`;\r\n\r\nconst Image = styled.div`\r\n  margin: auto;\r\n  position: relative;\r\n  box-shadow: ${props => props.theme.shadow.feature.small.default};\r\n  transition: ${props => props.theme.transitions.boom.transition};\r\n  border-radius: ${props => props.theme.borderRadius.default};\r\n  min-height: 400px;\r\n  img {\r\n    border-radius: ${props => props.theme.borderRadius.default};\r\n  }\r\n  &:hover {\r\n    box-shadow: ${props => props.theme.shadow.feature.small.hover};\r\n    transform: scale(1.04);\r\n  }\r\n  a {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: ${props => props.theme.borderRadius.default};\r\n    > div {\r\n      position: static !important;\r\n    }\r\n    > div > div {\r\n      position: static !important;\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 0 0 5px ${props => props.theme.colors.primary.dark};\r\n    }\r\n  }\r\n  flex-basis: 100%;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  @media (max-width: 800px) {\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  @media (max-width: 500px) {\r\n    min-height: 200px;\r\n  }\r\n  div{\r\n    style:none;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: ${props => props.theme.colors.white.light};\r\n    padding: 5px 10px;\r\n    border: solid 1px #fff;\r\n    border-radius: 20px;\r\n    &:hover {\r\n      color: ${props => props.theme.colors.white.grey};\r\n      background: ${props => props.theme.colors.white.light};\r\n    }\r\n`;\r\n\r\nconst Information = styled.div`\r\n    h1 {\r\n      display: inline-block;\r\n      transition: all ${props => props.theme.transitions.default.duration};\r\n      &:hover {\r\n        color: ${props => props.theme.colors.white.light};\r\n      }\r\n    }\r\n    text-align: center;\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    width: 100%;\r\n    border-bottom: ${props => props.theme.border.posts};\r\n    @media (max-width: 800px) {\r\n      flex-basis: 100%;\r\n      max-width: 100%;\r\n      width: 100%;\r\n    }\r\n`;\r\n\r\nconst HeadTitle = styled.div`\r\n    padding: 1rem 0rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: ${props => props.theme.colors.white.light};\r\n`;\r\n\r\nconst Resource = ({ pageContext, data }) => {\r\n  const { spath, tagName } = pageContext;\r\n  const postsByType = {};\r\n  const postsByCategory = {};\r\n  const postsByTag = {};\r\n  var title = [];\r\n  var categories = [];\r\n  var posts = [];\r\n  var keyword = [];\r\n  data.allMarkdownRemark.edges.map(({ node }) => {  \r\n    if (node.frontmatter.type) {\r\n      if (!postsByType[node.frontmatter.type]) {\r\n        postsByType[node.frontmatter.type] = [];\r\n      }\r\n      if (!postsByType[node.frontmatter.type][node.frontmatter.typeTitle]) {\r\n        postsByType[node.frontmatter.type][node.frontmatter.typeTitle] = [];\r\n      }\r\n      postsByType[node.frontmatter.type][node.frontmatter.typeTitle].push(node);\r\n    }\r\n  });\r\n  const typeList = Object.keys(postsByType);\r\n  typeList.map(type => {\r\n    postsByType[type][Object.keys(postsByType[type])].map(node => {\r\n      if(type){\r\n        if (!postsByCategory[type]) {\r\n          postsByCategory[type] = [];\r\n        }\r\n        if (node.frontmatter.categores) {\r\n          if (!postsByCategory[type][node.frontmatter.categores]) {\r\n            postsByCategory[type][node.frontmatter.categores] = [];\r\n          }\r\n          postsByCategory[type][node.frontmatter.categores].push(node);\r\n        }\r\n        if (!postsByTag[type]) {\r\n          postsByTag[type] = [];\r\n        }\r\n        if (node.frontmatter.tags) {\r\n          node.frontmatter.tags.forEach(tag => {\r\n            if (!postsByTag[type][tag]) {\r\n              postsByTag[type][tag] = [];\r\n            }\r\n            postsByTag[type][tag].push(node);\r\n          });\r\n        }\r\n      }\r\n    })\r\n  });\r\n  var uri = spath.split(\"/\");\r\n  switch (uri.length) {\r\n    case 2:\r\n      if(postsByType[uri[0]]){\r\n        keyword.push(Object.keys(postsByType[uri[0]]));\r\n        keyword.push(tagName);\r\n        title = [(uri[0]), Object.keys(postsByType[uri[0]])+\" · 标签\"];\r\n        posts = postsByCategory[uri[0]][uri[1]]?postsByCategory[uri[0]][uri[1]]:postsByTag[uri[0]][uri[1]];\r\n        categories = Object.keys(postsByTag[uri[0]]);\r\n      }\r\n      break;\r\n    case 3:\r\n      //title = [uri[0], Object.keys(postsByType[uri[0]])];\r\n      //categories = Object.keys(postsByCategory[uri[0]][uri[1]][uri[2]]);\r\n      break;\r\n    default:\r\n      if(postsByType[uri[0]]){\r\n        keyword.push(Object.keys(postsByType[uri[0]]));\r\n        title = [uri[0], Object.keys(postsByType[uri[0]])+\" · 分类\"];\r\n        posts = postsByType[uri[0]][Object.keys(postsByType[uri[0]])];\r\n        categories = Object.keys(postsByCategory[uri[0]]);\r\n      }\r\n      break;\r\n  }\r\n  //const upperTag = tagName.charAt(0).toUpperCase() + tagName.slice(1);\r\n  return (\r\n    <Layout>\r\n      <Helmet title={`${keyword[keyword.length-1]} | ${config.siteTitle}`} />\r\n      <Header title={keyword[keyword.length-1]}>\r\n        <StyledLink to=\"/category\">分类</StyledLink>\r\n      </Header>\r\n      <ContentWrapper>\r\n        <ContentContainer>\r\n          <ContentPost>\r\n              <ContentNav path={spath} title=\"分类\" keyword={keyword}></ContentNav>\r\n              \r\n              <ProjectsList />\r\n              {posts && posts.map(node => (\r\n                <BlogList\r\n                  key={node.id}\r\n                  cover={node.frontmatter.cover.childImageSharp.fluid}\r\n                  stype={node.frontmatter.type}\r\n                  path={node.frontmatter.path}\r\n                  title={node.frontmatter.title}\r\n                  date={node.frontmatter.date}\r\n                  category = {node.frontmatter.categores}\r\n                  tags={node.frontmatter.tags}\r\n                  excerpt={node.excerpt}\r\n                />\r\n              ))}\r\n          </ContentPost>\r\n          <AsideWrapper>\r\n            <Card \r\n              title={title[1]} \r\n              other=\"\" \r\n              path={title[0]}\r\n              list={categories}/>\r\n            <Archive />\r\n            <GuessLike />\r\n          </AsideWrapper>\r\n        </ContentContainer>      \r\n      </ContentWrapper>\r\n    </Layout>\r\n  )};\r\n\r\nexport default Resource;\r\n\r\nResource.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    spath: PropTypes.string,\r\n    tagname: PropTypes.string,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            excerpt: PropTypes.string,\r\n            frontmatter: PropTypes.shape({\r\n              cover: PropTypes.object.isRequired,\r\n              path: PropTypes.string.isRequired,\r\n              title: PropTypes.string.isRequired,\r\n              date: PropTypes.string.isRequired,\r\n              tags: PropTypes.array,\r\n              categores: PropTypes.string.isRequired,\r\n              type: PropTypes.string.isRequired,\r\n              typeID: PropTypes.string.isRequired,\r\n              typeTitle: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 200)\r\n          frontmatter {\r\n            title\r\n            path\r\n            tags\r\n            type\r\n            typeID\r\n            typeTitle\r\n            categores\r\n            date(formatString: \"MM.DD.YYYY\")\r\n            cover {\r\n              childImageSharp {\r\n                fluid(\r\n                  maxWidth: 1000\r\n                  quality: 90\r\n                  traceSVG: { color: \"#2B2B2F\" }\r\n                ) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}